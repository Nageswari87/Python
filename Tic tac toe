import random
class TicTacToe:
    def __init__(self):
        self.board = []
    def create_board(self):
        for i in range(3):
            row = []
            for j in range(3):
                row.append('_')
            self.board.append(row)
    def get_random_first_player(self):
        return random.randint(0, 1)
    def fix_spot(self, row, col, player):
        self.board[row][col] = player
    def is_player_win(self, player):
        n = len(self.board)
        for i in range(n):
            if all(self.board[i][j] == player for j in range(n)):
                return True
        for i in range(n):
            if all(self.board[j][i] == player for j in range(n)):
                return True
        if all(self.board[i][i] == player for i in range(n)):
            return True
        if all(self.board[i][n-1-i] == player for i in range(n)):
            return True
        return False
    def is_board_filled(self):
        for row in self.board:
            if '_' in row:
                return False
        return True
    def swap_player_turn(self, player):
        return 'X' if player == 'O' else 'O'
    def show_board(self):
        for row in self.board:
            print(" ".join(row))
        print()
    def start(self):
        self.create_board()
        player = 'X' if self.get_random_first_player() == 1 else 'O'
        while True:
            print(f"Player {player}'s Turn")
            self.show_board()
            try:
                row, col = map(int, input("Enter row and column numbers (1-3) to fix spot: ").split())
                row -= 1
                col -= 1
                if self.board[row][col] != '_':
                    print("Spot already taken, choose another spot.")
                    continue
                self.fix_spot(row, col, player)
                if self.is_player_win(player):
                    self.show_board()
                    print(f"Player {player} wins the game!")
                    break
                if self.is_board_filled():
                    self.show_board()
                    print("Match Draw!")
                    break
                player = self.swap_player_turn(player)
            except (ValueError, IndexError):
                print("Invalid input. Please enter valid row and column numbers (1-3).")
        print("Game Over")
tic_tac_toe = TicTacToe()
tic_tac_toe.start()
